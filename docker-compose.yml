version: '3.9'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    platform: linux/amd64
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: "yes"
    ports:
      - "2181:2181"
    networks:
      - ecommerce_network

  kafka:
    image: wurstmeister/kafka:latest
    platform: linux/amd64
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"  # Ensure topics are automatically created
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_NUM_PARTITIONS: 1  # Number of partitions for topics
      KAFKA_CREATE_TOPICS: "product_updates:1:1"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    depends_on:
      - zookeeper
    restart: always
    networks:
      - ecommerce_network

  db_product:
    image: postgres:13
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: product_user
      POSTGRES_PASSWORD: product_pass
    networks:
      - ecommerce_network

  product_service:
    build:
      context: .
    command: [ "sh", "-c", "python manage.py migrate && python manage.py runserver 0.0.0.0:8001" ]
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    depends_on:
      - db_product
      - kafka
    restart: always
    environment:
      DB_NAME: "product_db"
      DB_USER: "product_user"
      DB_PASSWORD: "product_pass"
      DB_HOST: db_product
      DB_PORT: "5432"
      KAFKA_URL: kafka
      KAFKA_PORT: "9092"
      AUTH_SERVICE_URL: "http://localhost:8000"
    networks:
      - ecommerce_network

  kafka_consumer:
    build:
      context: .
      dockerfile: Dockerfile.consumer  # Separate Dockerfile for consumer
    depends_on:
      - kafka
    restart: always
    environment:
      DB_NAME: "product_db"
      DB_USER: "product_user"
      DB_PASSWORD: "product_pass"
      DB_HOST: db_product
      DB_PORT: "5432"
      KAFKA_URL: kafka
      KAFKA_PORT: "9092"
      AUTH_SERVICE_URL: "http://localhost:8000"
    networks:
      - ecommerce_network

networks:
  ecommerce_network:
    driver: bridge
